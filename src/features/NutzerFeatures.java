package features;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;

public class NutzerFeatures {
	private static final String NUTZERKLASSE = "Quelldateien\\User.java";
	private static final String HOMEFOLDERKLASSE = "Quelldateien\\HomeFolder.java";
	private static final String NUTZERTASK = "Quelldateien\\AsyncTaskUser.java";

	private String md2Pfad;

	public NutzerFeatures(String md2Pfad) {
		this.md2Pfad = md2Pfad;
	}

	/**
	 * Kopiert die Nutzerklasse in die md2-Struktur
	 */
	public void erstelleNutzerklasse() {
		try {
			Files.copy(new File(NUTZERKLASSE).toPath(),
					new File(this.md2Pfad
							+ "\\testprojekt.androidLollipop\\md2_app_TestprojektApp\\app\\src\\main\\java\\md2\\testprojekt\\md2\\model\\User.java")
									.toPath(),
					StandardCopyOption.REPLACE_EXISTING);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.err.println("Nutzerklasse nicht erstellt.");
		}
	}
	
	/**
	 * Kopiert die Nutzerklasse in die md2-Struktur
	 */
	public void erstelleHomeFolderklasse() {
		try {
			Files.copy(new File(HOMEFOLDERKLASSE).toPath(),
					new File(this.md2Pfad
							+ "\\testprojekt.androidLollipop\\md2_app_TestprojektApp\\app\\src\\main\\java\\md2\\testprojekt\\md2\\model\\HomeFolder.java")
									.toPath(),
					StandardCopyOption.REPLACE_EXISTING);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.err.println("Nutzerklasse nicht erstellt.");
		}
	}

	/**
	 * Kopiert die Asynctask-Klasse in die md2-Struktur
	 */
	public void erstelleNutzerTask() {
		try {
			Files.copy(new File(NUTZERTASK).toPath(),
					new File(this.md2Pfad
							+ "\\testprojekt.androidLollipop\\md2_app_TestprojektApp\\app\\src\\main\\java\\md2\\testprojekt\\md2\\controller\\AsyncTaskUser.java")
									.toPath(),
					StandardCopyOption.REPLACE_EXISTING);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.err.println("Task nicht erstellt");
		}
	}

	/**
	 * Erstellt die Funktionalität zum Registrieren
	 */
	public void erstelleRegistrirungsfunktion() {
		try {
			String datei = "\\testprojekt.androidLollipop\\md2_app_TestprojektApp\\app\\src\\main\\java\\md2\\testprojekt\\md2\\controller\\action\\FirstWFE_FirstWFE_registerRegisterViewBt_Action.java";
			FileReader fileIn = new FileReader(md2Pfad
					+ datei);
			BufferedReader bufIn = new BufferedReader(fileIn);

			String zeile = bufIn.readLine();
			String newText = "//Autogenerated md2 Code with some extra functions\n";

			while (zeile != null) {

				newText += zeile + "\n";
				
				if (zeile.equals("package md2.testprojekt.md2.controller.action;")) {
					newText += "import md2.testprojekt.md2.model.User;\n";
					newText += "import md2.testprojekt.md2.controller.AsyncTaskUser;\n";
				}

				if (zeile.equals("\t\t\telse{")) {
					newText += "\t\t\t\tUser user = new User();\n";
					newText += "\t\t\t\tuser.setName(Md2ViewManager.getInstance().getWidgetValue(R.id.Register___ContainerUserName_UserName).toString());\n";
					newText += "\t\t\t\tuser.setPassword(Md2ViewManager.getInstance().getWidgetValue(R.id.Register___ContainerPasswort_Passwort).toString());\n";
					newText += "\t\t\t\tnew AsyncTaskUser(Md2ViewManager.getInstance().getActiveView(),user).execute(\"http://34.239.181.2:8080/api/users\");\n";
				}
				zeile = bufIn.readLine();
			}

			fileIn.close();

			FileWriter fileOut = new FileWriter(md2Pfad
					+ datei);
			fileOut.write(newText);

			fileOut.close();

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
		}
	}
	
	public void erstelleEinloggenfunktion(){
		try {
			String datei = "\\testprojekt.androidLollipop\\md2_app_TestprojektApp\\app\\src\\main\\java\\md2\\testprojekt\\md2\\controller\\action\\FirstWFE___FirstWFE_processChainExecuteStepAction_Action.java";
			FileReader fileIn = new FileReader(md2Pfad
					+ datei);
			BufferedReader bufIn = new BufferedReader(fileIn);

			String zeile = bufIn.readLine();
			String newText = "//Autogenerated md2 Code with some extra functions\n";
			
			int auslassen = 0;

			while (zeile != null) {

				if (auslassen == 0) {
					newText += zeile + "\n";
				} else {
					auslassen--;
				}
				
				if (zeile.equals("package md2.testprojekt.md2.controller.action;")) {
					newText += "import md2.testprojekt.md2.model.User;\n";
					newText += "import md2.testprojekt.md2.controller.AsyncTaskUser;\n";
				}

				if (zeile.equals("\t\t\tMd2CallTask var3 = null;")) {
					newText += "\t\t\t\tUser user = new User();\n";
					newText += "\t\t\t\tuser.setName(Md2ViewManager.getInstance().getWidgetValue(R.id.Login___ContainerUserName_UserName).toString());\n";
					newText += "\t\t\t\tuser.setPassword(Md2ViewManager.getInstance().getWidgetValue(R.id.Login___ContainerPasswort_Passwort).toString());\n";
					newText += "\t\t\t\tnew AsyncTaskUser(Md2ViewManager.getInstance().getActiveView(),user).execute(\"http://34.239.181.2:8080/api/users/login\");\n";
					auslassen = 6;
				}
				zeile = bufIn.readLine();
			}

			fileIn.close();

			FileWriter fileOut = new FileWriter(md2Pfad
					+ datei);
			fileOut.write(newText);

			fileOut.close();

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
		}
	}
}
